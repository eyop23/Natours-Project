// app.get('/api/v1/tours', GetAllTours);
// app.post('/api/v1/tours', PostTour);
// app.get('/api/v1/tours/:id', GetTour);
// app.patch('/api/v1/tours/:id', UpdateTour);
// app.delete('/api/v1/tours/:id', DeleteTour);
// app.route('/api/v1/tours').get(GetAllTours).post(PostTour);
// app
//   .route('/api/v1/tours/:id')
//   .get(GetTour)
//   .patch(UpdateTour)
//   .delete(DeleteTour);
// const fs = require('fs');
// const tours = JSON.parse(fs.readFileSync('./dev-data/data/tours-simple.json'));
// exports.CheakID = (req, res, next, val) => {
//   const tour = tours.find(tours => tours.id === +req.params.id);
//   console.log(`param middleware ${val}`);
//   if (!tour) {
//     return res.status(404).json({
//       status: 'not found',
//       message: 'invalid id'
//     });
//   }
//   next();
// };
//.....
// const queryObj = { ...req.query };
    // EACH MONGODB QUERY RETURN ANOTHER QUERY UNTIL IT AWAIT IT TO GET THE DOCUMENT
    // 1.EXCLUDING QUERY
    // const ExcludeQuery = ['page', 'limit', 'sort', 'fields'];
    // ExcludeQuery.forEach(el => delete queryObj[el]);
    // let queryString = JSON.stringify(queryObj);
    // queryString = queryString.replace('lte', '$lte'); //returns a string
    // let query = Tour.find(JSON.parse(queryString));
    //2.SORT
    // if (req.query.sort) {
    //   const sortBy = req.query.sort.split(',').join(' ');
    //   query = query.sort(sortBy);
    // } else {
    //   query = query.sort('createdAt');
    // }
    //3.field limiting
    // if (req.query.fields) {
    //   const fields = req.query.fields.split(',').join(' ');
    //   query = query.select(fields);
    // } else {
    //   query = query.select('-__v');
    // }
    //4.PAGINATION
    // const page = this.queryString.page * 1 || 1;
    // const limit = req.query.limit * 1 || 100;
    // const skip = (page - 1) * limit;
    // query = query.skip(skip).limit(limit);
    // if (req.query.page) {
    //   const numTours = await Tour.countDocuments();
    //   if (skip > numTours) throw new Error('This page does not exist');
    // }